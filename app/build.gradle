import com.apollographql.apollo.gradle.ApolloSchemaIntrospectionTask

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.apollographql.apollo:apollo-gradle-plugin:0.4.3'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.apollographql.android'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "murki.githubexplorer"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        buildConfigField("String", "GITHUB_API_KEY", GITHUB_API_KEY)
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
}

androidExtensions {
    // to allow for use of @Parcelize
    experimental = true
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support:support-v4:27.0.2'
    implementation 'com.android.support:recyclerview-v7:27.0.2'
    implementation 'com.android.support:cardview-v7:27.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.squareup.okhttp3:okhttp:3.9.1'
    implementation 'com.apollographql.apollo:apollo-runtime:0.4.3'
    kapt "com.android.databinding:compiler:3.0.1"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

task introspectGithubSchema(type: ApolloSchemaIntrospectionTask) {
    description = "Generated Github GraphQL API schema introspection JSON"
    group = "graphql"

    def githubApiKey = GITHUB_API_KEY.replaceAll("\"","") //remove double quotes from constant
    setHeaders(["Authorization: bearer " + githubApiKey])
    setUrl("https://api.github.com/graphql")
    setOutput(project.projectDir.absolutePath + "/src/main/graphql/murki/githubexplorer/data/schema.json")
}
